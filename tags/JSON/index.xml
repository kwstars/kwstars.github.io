<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JSON on Kira's blog</title><link>https://www.linux88.com/tags/JSON/</link><description>Recent content in JSON on Kira's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 Mar 2021 12:04:45 +0800</lastBuildDate><atom:link href="https://www.linux88.com/tags/JSON/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在Go中处理JSON数据</title><link>https://www.linux88.com/post/Go/%E5%A6%82%E4%BD%95%E5%9C%A8Go%E4%B8%AD%E5%A4%84%E7%90%86JSON%E6%95%B0%E6%8D%AE/</link><pubDate>Thu, 25 Mar 2021 12:04:45 +0800</pubDate><guid>https://www.linux88.com/post/Go/%E5%A6%82%E4%BD%95%E5%9C%A8Go%E4%B8%AD%E5%A4%84%E7%90%86JSON%E6%95%B0%E6%8D%AE/</guid><description>Tutorial: How to work with JSON data in Go You might not be using json.Decoder correctly in golang</description></item><item><title>Go JSON</title><link>https://www.linux88.com/post/Go/json/</link><pubDate>Tue, 10 Dec 2019 11:44:48 +0800</pubDate><guid>https://www.linux88.com/post/Go/json/</guid><description>结构体 field 大小写对序列化的影响 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;os&amp;#34; ) type ColorGroup struct {s ID int Name string Colors []string } func main() { m := []*ColorGroup{{ ID: 1, Name: &amp;#34;a&amp;#34;, Colors: nil, }, { ID: 2, Name: &amp;#34;a&amp;#34;, Colors: nil, }} b, err := json.Marshal(m) if err != nil { fmt.Println(&amp;#34;error:&amp;#34;, err) } os.Stdout.Write(b) } //output</description></item></channel></rss>