<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wire on Kira's blog</title><link>https://www.linux88.com/tags/wire/</link><description>Recent content in wire on Kira's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Oct 2020 20:25:05 +0800</lastBuildDate><atom:link href="https://www.linux88.com/tags/wire/index.xml" rel="self" type="application/rss+xml"/><item><title>精通Wire</title><link>https://www.linux88.com/post/Go/%E7%B2%BE%E9%80%9AWire/</link><pubDate>Wed, 14 Oct 2020 20:25:05 +0800</pubDate><guid>https://www.linux88.com/post/Go/%E7%B2%BE%E9%80%9AWire/</guid><description>wire是什么 ？ Wire是Go Cloud团队开发的Golang中的轻量级依赖注入工具。它会自动生成代码，然后在编译时注入依赖项。 依赖注入是保持软件“loose-coupling and easy to maintain（</description></item><item><title>使用Wire在GO中进行依赖注入</title><link>https://www.linux88.com/post/Go/%E4%BD%BF%E7%94%A8Wire%E5%9C%A8GO%E4%B8%AD%E8%BF%9B%E8%A1%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</link><pubDate>Wed, 14 Oct 2020 20:21:26 +0800</pubDate><guid>https://www.linux88.com/post/Go/%E4%BD%BF%E7%94%A8Wire%E5%9C%A8GO%E4%B8%AD%E8%BF%9B%E8%A1%8C%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</guid><description>什么是依赖注入？ 依赖注入是您的组件（通常是go中的结构）在创建时应接收其依赖的想法。这与初始化期间构建其自身依赖关系的组件的关联反模式背道而驰。 依赖注入是保持软件“松耦合且易于维护”的最重要的设计原则</description></item></channel></rss>